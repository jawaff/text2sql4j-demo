/*
 * This file was generated by the Gradle 'init' task.
 */

import gradle.kotlin.dsl.accessors._3e19a5144422fb3cf172accae23b43c9.implementation
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

val logbackVersion = "1.2.3"
val slf4jVersion = "1.7.30"
val junitVersion = "5.9.1"
val junitPlatformVersion = "1.9.1"
val kotlinVersion = "1.8.10"
val kotlinxVersion = "1.6.4"

val vertxVersion = "4.4.0"
val jacksonVersion = "2.14.2"

dependencies {
    constraints {
        implementation("ch.qos.logback:logback-classic:$logbackVersion")
        implementation("org.slf4j:slf4j-api:$slf4jVersion")
        implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxVersion")
        implementation("io.vertx:vertx-core:$vertxVersion")
        implementation("io.vertx:vertx-lang-kotlin:$vertxVersion")
        implementation("io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion")
        implementation("io.vertx:vertx-web:$vertxVersion")
        implementation("io.vertx:vertx-web-openapi:$vertxVersion")
        implementation("io.vertx:vertx-web-validation:$vertxVersion")
        implementation("io.vertx:vertx-pg-client:$vertxVersion")
        implementation("io.vertx:vertx-sql-client:$vertxVersion")
        implementation("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
        implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    }

    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
    testImplementation("org.junit.platform:junit-platform-suite-api:$junitPlatformVersion")
    testImplementation("org.junit.platform:junit-platform-suite-engine:$junitPlatformVersion")
}

// JVM target applied to all Kotlin tasks across all subprojects
tasks.withType<KotlinCompile> {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11.toString()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}
